apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  labels:
    app: {{ .ServiceName }}-esp
  name: {{ .ServiceName }}-esp
  namespace: {{ .Namespace }}
spec:
  replicas: {{ .Replicas }}
  selector:
    matchLabels:
      app: {{ .ServiceName }}-esp
  template:
    metadata:
      labels:
        app: {{ .ServiceName }}-esp
      annotations:
        ctl.isla.solutions/espconfighash: "{{ .ConfigMapHash }}"
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: esp
        image: {{ .ContainerImage }}
        command: [
          "/bin/bash",
          "-c",
          "base64 --decode /tmp/nginx-auto.conf.template > /etc/nginx/nginx-auto.conf.template && /usr/sbin/start_esp -p 8080 -z healthz -a ${UPSTREAM} -s ${ENDPOINT} -v ${CONFIG_VERSION}",
        ]
        env:
        - name: UPSTREAM
          value: {{ .Upstream }}
        - name: ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{ .ServiceName }}-esp
              key: ENDPOINT
        - name: CONFIG_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ .ServiceName }}-esp
              key: CONFIG_VERSION
        volumeMounts:
        - name: esp-data
          mountPath: /tmp/nginx-auto.conf.template
          subPath: nginx-auto.conf.template
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8090
        ports:
        - name: http
          containerPort: 8080
        - name: status
          containerPort: 8090
      volumes:
      - name: esp-data
        configMap:
          name: {{ .ServiceName }}-esp
          items:
          - key: nginx-auto.conf.template
            path: nginx-auto.conf.template